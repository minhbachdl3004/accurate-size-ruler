"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.techspecs = void 0;
const axios_1 = require("axios");
async function product_search(techspecs_base_url, query, techspecs_api_key, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/product/search?query=${query.keyword.replace(" ", "%20")}`;
    const headers = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Content-Type": "application/json",
    };
    const payload = { category: query.category };
    const req = await axios_1.default.post(url, payload, {
        headers: headers,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
    }
    else {
        try {
            return JSON.stringify(req.data, null, 2);
        }
        catch (err) {
            return JSON.stringify(req.data);
        }
    }
}
async function product_detail(techspecs_base_url, techspecs_product_id, techspecs_api_key, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/product/detail/?productId=${techspecs_product_id}`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Accept-Encoding": "gzip, deflate",
    };
    const req = await axios_1.default.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
    }
    else {
        try {
            return JSON.stringify(req.data, null, 2);
        }
        catch (err) {
            return JSON.stringify(req.data);
        }
    }
}
async function get_all_brands(techspecs_base_url, techspecs_api_key, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/all/brands`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
    };
    const req = await axios_1.default.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
    }
    else {
        try {
            return JSON.stringify(req.data, null, 2);
        }
        catch (err) {
            return JSON.stringify(req.data);
        }
    }
}
async function get_all_categories(techspecs_base_url, techspecs_api_key, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/all/categories/`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
    };
    const req = await axios_1.default.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
    }
    else {
        try {
            return JSON.stringify(req.data, null, 2);
        }
        catch (err) {
            return JSON.stringify(req.data);
        }
    }
}
async function get_all_products(techspecs_base_url, brand, category, date, page, techspecs_api_key, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/all/products?page=${page}`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Content-Type": "application/json",
    };
    const payload = {
        brand: brand,
        category: category,
        date: date.from,
        to: date.to,
    };
    const req = await axios_1.default.post(url, payload, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
    }
    else {
        try {
            return JSON.stringify(req.data, null, 2);
        }
        catch (err) {
            return JSON.stringify(req.data);
        }
    }
}
exports.techspecs = {
    product_search,
    product_detail,
    get_all_brands,
    get_all_categories,
    get_all_products,
};
