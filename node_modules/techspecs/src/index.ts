import axios from "axios";
import { query, mode, dateObj } from "./types";


async function product_search(
  techspecs_base_url: string,
  query: query,
  techspecs_api_key: string,
  mode: mode = "pretty"
) {
    const url = `${techspecs_base_url}/v4/product/search?query=${query.keyword.replace(" ", "%20")}`;
    const headers = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Content-Type": "application/json",
    };
    const payload = { category: query.category };
    const req = await axios.post(url, payload, {
        headers: headers,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
      } else {
        try {
          return JSON.stringify(req.data, null, 2);
        } catch (err) {
          return JSON.stringify(req.data);
        }
      }
      
}


async function product_detail(
  techspecs_base_url: string,
  techspecs_product_id: string,
  techspecs_api_key: string,
  mode = "pretty"
){
    const url = `${techspecs_base_url}/v4/product/detail/?productId=${techspecs_product_id}`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Accept-Encoding": "gzip, deflate",
    };
    const req = await axios.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
      } else {
        try {
          return JSON.stringify(req.data, null, 2);
        } catch (err) {
          return JSON.stringify(req.data);
        }
      }
      
}


async function get_all_brands(techspecs_base_url: string, techspecs_api_key: string, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/all/brands`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
    };
    const req = await axios.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
      } else {
        try {
          return JSON.stringify(req.data, null, 2);
        } catch (err) {
          return JSON.stringify(req.data);
        }
      }
      
}


async function get_all_categories(techspecs_base_url: string, techspecs_api_key: string, mode = "pretty") {
    const url = `${techspecs_base_url}/v4/all/categories/`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
    };
    const req = await axios.get(url, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
      } else {
        try {
          return JSON.stringify(req.data, null, 2);
        } catch (err) {
          return JSON.stringify(req.data);
        }
      }
      
}


async function get_all_products(
  techspecs_base_url: string,
  brand: string[],
  category: string[],
  date: dateObj,
  page: number,
  techspecs_api_key: string,
  mode = "pretty"
) {
    const url = `${techspecs_base_url}/v4/all/products?page=${page}`;
    const header = {
        Accept: "application/json",
        Authorization: `Bearer ${techspecs_api_key}`,
        "Content-Type": "application/json",
    };
    const payload = {
        brand: brand,
        category: category,
        date: date.from,
        to: date.to,
    };
    const req = await axios.post(url, payload, {
        headers: header,
    });
    if (mode === "raw") {
        return JSON.stringify(req.data);
      } else {
        try {
          return JSON.stringify(req.data, null, 2);
        } catch (err) {
          return JSON.stringify(req.data);
        }
      }
      
}
export const techspecs = {
  product_search,
  product_detail,
  get_all_brands,
  get_all_categories,
  get_all_products,
};
